package com.eternaldoom.chaosbeasts.client.model;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;
import net.minecraft.util.MathHelper;

public class ModelLobster extends ModelBase
{
  //fields
    ModelRenderer ArmRight;
    ModelRenderer ArmLeft;
    ModelRenderer ClawRight1;
    ModelRenderer ClawLeft1;
    ModelRenderer ClawLeft2;
    ModelRenderer ClawRight2;
    ModelRenderer ClawBigLeft1;
    ModelRenderer ClawBigLeft2;
    ModelRenderer ClawBigRight1;
    ModelRenderer ClawBigRight2;
    ModelRenderer ClawBigRight3;
    ModelRenderer ClawBigRight4;
    ModelRenderer ClawBigLeft4;
    ModelRenderer ClawBigLeft3;
    ModelRenderer ArmRight2;
    ModelRenderer ArmLeft2;
    ModelRenderer HeadBig;
    ModelRenderer HeadSmall;
    ModelRenderer HeadMedium;
    ModelRenderer AntennaRight1;
    ModelRenderer AntennaLeft1;
    ModelRenderer AntennaRight2;
    ModelRenderer AntennaLeft2;
    ModelRenderer EyeLeft;
    ModelRenderer EyeRight;
    ModelRenderer Body1;
    ModelRenderer Body2;
    ModelRenderer Body3;
    ModelRenderer Body4;
    ModelRenderer ExoSlele1;
    ModelRenderer ExoSlele2;
    ModelRenderer ExoSlele3;
    ModelRenderer Tail1;
    ModelRenderer Tail3;
    ModelRenderer Tail2;
    ModelRenderer Leg1a;
    ModelRenderer Leg1b;
    ModelRenderer Leg2a;
    ModelRenderer Leg2b;
    ModelRenderer Leg3a;
    ModelRenderer Leg3b;
    ModelRenderer Leg4a;
    ModelRenderer Leg4b;
    ModelRenderer Piece1;
    ModelRenderer Piece2;
    ModelRenderer Piece3;
    ModelRenderer Piece4;
  
  public ModelLobster()
  {
    textureWidth = 32;
    textureHeight = 64;
    
      ArmRight = new ModelRenderer(this, 0, 0);
      ArmRight.addBox(0F, 0F, 0F, 18, 6, 6);
      ArmRight.setRotationPoint(8F, 9F, 3F);
      ArmRight.setTextureSize(64, 32);
      ArmRight.mirror = true;
      setRotation(ArmRight, 0.8726646F, 0F, 0F);
      ArmRight.mirror = false;
      ArmLeft = new ModelRenderer(this, 0, 0);
      ArmLeft.addBox(0F, 0F, -9F, 18, 6, 6);
      ArmLeft.setRotationPoint(8F, 3F, -14F);
      ArmLeft.setTextureSize(64, 32);
      ArmLeft.mirror = true;
      setRotation(ArmLeft, 0.8726646F, 0F, 0F);
      ClawRight1 = new ModelRenderer(this, 0, 32);
      ClawRight1.addBox(17F, 0F, -1F, 4, 2, 2);
      ClawRight1.setRotationPoint(9F, 9F, 3F);
      ClawRight1.setTextureSize(64, 32);
      ClawRight1.mirror = true;
      setRotation(ClawRight1, 0F, 0F, 0F);
      ClawLeft1 = new ModelRenderer(this, 12, 36);
      ClawLeft1.addBox(18F, 0F, 0F, 4, 2, 2);
      ClawLeft1.setRotationPoint(8F, 9F, -13F);
      ClawLeft1.setTextureSize(64, 32);
      ClawLeft1.mirror = true;
      setRotation(ClawLeft1, 0F, 0F, 0F);
      ClawLeft2 = new ModelRenderer(this, 12, 32);
      ClawLeft2.addBox(21F, 0F, 15F, 4, 2, 2);
      ClawLeft2.setRotationPoint(4F, 9F, -14F);
      ClawLeft2.setTextureSize(64, 32);
      ClawLeft2.mirror = true;
      setRotation(ClawLeft2, 0F, 0.5759587F, 0F);
      ClawRight2 = new ModelRenderer(this, 0, 36);
      ClawRight2.addBox(19F, 0F, -13F, 4, 2, 2);
      ClawRight2.setRotationPoint(8F, 9F, 3F);
      ClawRight2.setTextureSize(64, 32);
      ClawRight2.mirror = true;
      setRotation(ClawRight2, 0F, -0.5759587F, 0F);
      ClawBigLeft1 = new ModelRenderer(this, 16, 46);
      ClawBigLeft1.addBox(19F, 0F, 0F, 6, 4, 2);
      ClawBigLeft1.setRotationPoint(8F, 6F, -18F);
      ClawBigLeft1.setTextureSize(64, 32);
      ClawBigLeft1.mirror = true;
      setRotation(ClawBigLeft1, -0.3490659F, 0F, 0F);
      ClawBigLeft2 = new ModelRenderer(this, 16, 40);
      ClawBigLeft2.addBox(19F, 0F, 0F, 6, 4, 2);
      ClawBigLeft2.setRotationPoint(8F, 11F, -19F);
      ClawBigLeft2.setTextureSize(64, 32);
      ClawBigLeft2.mirror = true;
      setRotation(ClawBigLeft2, 0.3490659F, 0F, 0F);
      ClawBigRight1 = new ModelRenderer(this, 0, 46);
      ClawBigRight1.addBox(19F, 0F, 0F, 6, 4, 2);
      ClawBigRight1.setRotationPoint(7F, 7F, 10F);
      ClawBigRight1.setTextureSize(64, 32);
      ClawBigRight1.mirror = true;
      setRotation(ClawBigRight1, 0.3490659F, 0F, 0F);
      ClawBigRight2 = new ModelRenderer(this, 0, 40);
      ClawBigRight2.addBox(19F, 1F, 0F, 6, 4, 2);
      ClawBigRight2.setRotationPoint(7F, 10F, 11F);
      ClawBigRight2.setTextureSize(64, 32);
      ClawBigRight2.mirror = true;
      setRotation(ClawBigRight2, -0.3490659F, 0F, 0F);
      ClawBigRight3 = new ModelRenderer(this, 0, 58);
      ClawBigRight3.addBox(26F, 0F, 8F, 6, 4, 2);
      ClawBigRight3.setRotationPoint(5F, 10F, 4F);
      ClawBigRight3.setTextureSize(64, 32);
      ClawBigRight3.mirror = true;
      setRotation(ClawBigRight3, 0.3490659F, 0.3490659F, 0F);
      ClawBigRight4 = new ModelRenderer(this, 0, 52);
      ClawBigRight4.addBox(22F, 0F, 5F, 6, 4, 2);
      ClawBigRight4.setRotationPoint(10F, 9F, 7F);
      ClawBigRight4.setTextureSize(64, 32);
      ClawBigRight4.mirror = true;
      setRotation(ClawBigRight4, -0.3490659F, 0.3490659F, 0F);
      ClawBigLeft4 = new ModelRenderer(this, 16, 52);
      ClawBigLeft4.addBox(25F, 0F, -6F, 6, 4, 2);
      ClawBigLeft4.setRotationPoint(8F, 9F, -15F);
      ClawBigLeft4.setTextureSize(64, 32);
      ClawBigLeft4.mirror = true;
      setRotation(ClawBigLeft4, 0.3490659F, -0.3490659F, 0F);
      ClawBigLeft3 = new ModelRenderer(this, 16, 58);
      ClawBigLeft3.addBox(23F, 0F, -5F, 6, 4, 2);
      ClawBigLeft3.setRotationPoint(10F, 8F, -14F);
      ClawBigLeft3.setTextureSize(64, 32);
      ClawBigLeft3.mirror = true;
      setRotation(ClawBigLeft3, -0.3490659F, -0.3490659F, 0F);
      ArmRight2 = new ModelRenderer(this, 0, 0);
      ArmRight2.addBox(0F, 0F, 0F, 18, 6, 6);
      ArmRight2.setRotationPoint(-8F, 9F, -3F);
      ArmRight2.setTextureSize(64, 32);
      ArmRight2.mirror = true;
      setRotation(ArmRight2, 0.8726646F, -0.3490659F, 0F);
      ArmLeft2 = new ModelRenderer(this, 0, 0);
      ArmLeft2.addBox(0F, 0F, 0F, 18, 6, 6);
      ArmLeft2.setRotationPoint(-8F, 9F, -5F);
      ArmLeft2.setTextureSize(64, 32);
      ArmLeft2.mirror = true;
      setRotation(ArmLeft2, -2.268928F, 0.3490659F, 0F);
      HeadBig = new ModelRenderer(this, 0, 0);
      HeadBig.addBox(0F, 0F, 0F, 8, 8, 8);
      HeadBig.setRotationPoint(-11F, 6F, -8F);
      HeadBig.setTextureSize(64, 32);
      HeadBig.mirror = true;
      setRotation(HeadBig, 0F, 0F, 0F);
      HeadSmall = new ModelRenderer(this, 0, 0);
      HeadSmall.addBox(0F, 0F, 0F, 4, 4, 4);
      HeadSmall.setRotationPoint(-1F, 8F, -6F);
      HeadSmall.setTextureSize(64, 32);
      HeadSmall.mirror = true;
      setRotation(HeadSmall, 0F, 0F, 0F);
      HeadMedium = new ModelRenderer(this, 0, 0);
      HeadMedium.addBox(0F, 0F, 0F, 2, 6, 6);
      HeadMedium.setRotationPoint(-3F, 7F, -7F);
      HeadMedium.setTextureSize(64, 32);
      HeadMedium.mirror = true;
      setRotation(HeadMedium, 0F, 0F, 0F);
      AntennaRight1 = new ModelRenderer(this, 0, 0);
      AntennaRight1.addBox(0F, -5F, 0F, 1, 5, 1);
      AntennaRight1.setRotationPoint(1F, 8F, -3F);
      AntennaRight1.setTextureSize(64, 32);
      AntennaRight1.mirror = true;
      setRotation(AntennaRight1, 0F, 0F, 0F);
      AntennaLeft1 = new ModelRenderer(this, 0, 0);
      AntennaLeft1.addBox(0F, -5F, 0F, 1, 5, 1);
      AntennaLeft1.setRotationPoint(1F, 8F, -6F);
      AntennaLeft1.setTextureSize(64, 32);
      AntennaLeft1.mirror = true;
      setRotation(AntennaLeft1, 0F, 0F, 0F);
      AntennaRight2 = new ModelRenderer(this, 0, 0);
      AntennaRight2.addBox(0F, -5F, 0F, 1, 5, 1);
      AntennaRight2.setRotationPoint(1F, 3F, -3F);
      AntennaRight2.setTextureSize(64, 32);
      AntennaRight2.mirror = true;
      setRotation(AntennaRight2, -0.1745329F, 0F, 0F);
      AntennaLeft2 = new ModelRenderer(this, 0, 0);
      AntennaLeft2.addBox(0F, -5F, 0F, 1, 5, 1);
      AntennaLeft2.setRotationPoint(1F, 3F, -6F);
      AntennaLeft2.setTextureSize(64, 32);
      AntennaLeft2.mirror = true;
      setRotation(AntennaLeft2, 0.1745329F, 0F, 0F);
      EyeLeft = new ModelRenderer(this, 4, 30);
      EyeLeft.addBox(0F, 0F, 0F, 1, 1, 1);
      EyeLeft.setRotationPoint(3F, 9F, -5F);
      EyeLeft.setTextureSize(64, 32);
      EyeLeft.mirror = true;
      setRotation(EyeLeft, 0F, 0F, 0F);
      EyeRight = new ModelRenderer(this, 0, 30);
      EyeRight.addBox(0F, 0F, 0F, 1, 1, 1);
      EyeRight.setRotationPoint(3F, 9F, -4F);
      EyeRight.setTextureSize(64, 32);
      EyeRight.mirror = true;
      setRotation(EyeRight, 0F, 0F, 0F);
      Body1 = new ModelRenderer(this, 0, 0);
      Body1.addBox(0F, 0F, 0F, 10, 10, 10);
      Body1.setRotationPoint(-21F, 5F, -9F);
      Body1.setTextureSize(64, 32);
      Body1.mirror = true;
      setRotation(Body1, 0F, 0F, 0F);
      Body2 = new ModelRenderer(this, 0, 0);
      Body2.addBox(0F, 0F, 0F, 8, 8, 8);
      Body2.setRotationPoint(-29F, 6F, -8F);
      Body2.setTextureSize(64, 32);
      Body2.mirror = true;
      setRotation(Body2, 0F, 0F, 0F);
      Body3 = new ModelRenderer(this, 0, 0);
      Body3.addBox(0F, 0F, 0F, 8, 6, 6);
      Body3.setRotationPoint(-37F, 7F, -7F);
      Body3.setTextureSize(64, 32);
      Body3.mirror = true;
      setRotation(Body3, 0F, 0F, 0F);
      Body4 = new ModelRenderer(this, 0, 0);
      Body4.addBox(0F, 0F, 0F, 8, 2, 4);
      Body4.setRotationPoint(-45F, 9F, -6F);
      Body4.setTextureSize(64, 32);
      Body4.mirror = true;
      setRotation(Body4, 0F, 0F, 0F);
      ExoSlele1 = new ModelRenderer(this, 0, 0);
      ExoSlele1.addBox(0F, 0F, 0F, 5, 1, 2);
      ExoSlele1.setRotationPoint(-42F, 8F, -5F);
      ExoSlele1.setTextureSize(64, 32);
      ExoSlele1.mirror = true;
      setRotation(ExoSlele1, 0F, 0F, 0F);
      ExoSlele2 = new ModelRenderer(this, 0, 0);
      ExoSlele2.addBox(0F, 0F, 0F, 5, 1, 4);
      ExoSlele2.setRotationPoint(-34F, 6F, -6F);
      ExoSlele2.setTextureSize(64, 32);
      ExoSlele2.mirror = true;
      setRotation(ExoSlele2, 0F, 0F, 0F);
      ExoSlele3 = new ModelRenderer(this, 0, 0);
      ExoSlele3.addBox(0F, 0F, 0F, 5, 1, 6);
      ExoSlele3.setRotationPoint(-26F, 5F, -7F);
      ExoSlele3.setTextureSize(64, 32);
      ExoSlele3.mirror = true;
      setRotation(ExoSlele3, 0F, 0F, 0F);
      Tail1 = new ModelRenderer(this, 0, 0);
      Tail1.addBox(-3F, 0F, 0F, 3, 1, 3);
      Tail1.setRotationPoint(-46F, 9F, -2.5F);
      Tail1.setTextureSize(64, 32);
      Tail1.mirror = true;
      setRotation(Tail1, 0F, 0.2617994F, 0.1745329F);
      Tail3 = new ModelRenderer(this, 0, 0);
      Tail3.addBox(-3F, 0F, 0F, 3, 1, 3);
      Tail3.setRotationPoint(-45F, 9F, -8.5F);
      Tail3.setTextureSize(64, 32);
      Tail3.mirror = true;
      setRotation(Tail3, 0F, -0.2617994F, 0.1745329F);
      Tail2 = new ModelRenderer(this, 0, 0);
      Tail2.addBox(-3F, 0F, 0F, 3, 1, 3);
      Tail2.setRotationPoint(-46F, 9F, -5.5F);
      Tail2.setTextureSize(64, 32);
      Tail2.mirror = true;
      setRotation(Tail2, 0F, 0F, 0.1745329F);
      Leg1a = new ModelRenderer(this, 0, 0);
      Leg1a.addBox(0F, 0F, 0F, 2, 8, 2);
      Leg1a.setRotationPoint(-16F, 12F, -9F);
      Leg1a.setTextureSize(64, 32);
      Leg1a.mirror = true;
      setRotation(Leg1a, -0.3490659F, 0F, 0F);
      Leg1b = new ModelRenderer(this, 0, 0);
      Leg1b.addBox(0F, 0F, 0F, 2, 8, 1);
      Leg1b.setRotationPoint(-16F, 18F, -9F);
      Leg1b.setTextureSize(64, 32);
      Leg1b.mirror = true;
      setRotation(Leg1b, -0.1745329F, 0F, 0F);
      Leg2a = new ModelRenderer(this, 0, 0);
      Leg2a.addBox(0F, 0F, 0F, 2, 8, 2);
      Leg2a.setRotationPoint(-16F, 12F, -1F);
      Leg2a.setTextureSize(64, 32);
      Leg2a.mirror = true;
      setRotation(Leg2a, 0.3490659F, 0F, 0F);
      Leg2b = new ModelRenderer(this, 0, 0);
      Leg2b.addBox(0F, 0F, 0F, 2, 8, 1);
      Leg2b.setRotationPoint(-16F, 18F, -1F);
      Leg2b.setTextureSize(64, 32);
      Leg2b.mirror = true;
      setRotation(Leg2b, 0.1745329F, 0F, 0F);
      Leg3a = new ModelRenderer(this, 0, 0);
      Leg3a.addBox(0F, 0F, 0F, 2, 8, 2);
      Leg3a.setRotationPoint(-23F, 12F, -8F);
      Leg3a.setTextureSize(64, 32);
      Leg3a.mirror = true;
      setRotation(Leg3a, -0.3490659F, 0F, 0F);
      Leg3b = new ModelRenderer(this, 0, 0);
      Leg3b.addBox(0F, 0F, 0F, 2, 8, 1);
      Leg3b.setRotationPoint(-23F, 18F, -8F);
      Leg3b.setTextureSize(64, 32);
      Leg3b.mirror = true;
      setRotation(Leg3b, -0.1745329F, 0F, 0F);
      Leg4a = new ModelRenderer(this, 0, 0);
      Leg4a.addBox(0F, 0F, 0F, 2, 8, 2);
      Leg4a.setRotationPoint(-23F, 12F, -2F);
      Leg4a.setTextureSize(64, 32);
      Leg4a.mirror = true;
      setRotation(Leg4a, 0.3490659F, 0F, 0F);
      Leg4b = new ModelRenderer(this, 0, 0);
      Leg4b.addBox(0F, 0F, 0F, 2, 8, 1);
      Leg4b.setRotationPoint(-23F, 18F, -2F);
      Leg4b.setTextureSize(64, 32);
      Leg4b.mirror = true;
      setRotation(Leg4b, 0.1745329F, 0F, 0F);
    Piece1 = new ModelRenderer(this, "Piece1");
    Piece1.setRotationPoint(0F, 0F, 0F);
    setRotation(Piece1, 0F, 0F, 0F);
    Piece1.mirror = true;
    Piece2 = new ModelRenderer(this, "Piece2");
    Piece2.setRotationPoint(0F, 0F, 0F);
    setRotation(Piece2, 0F, 0F, 0F);
    Piece2.mirror = true;
    Piece3 = new ModelRenderer(this, "Piece3");
    Piece3.setRotationPoint(-17F, -5F, 0F);
    setRotation(Piece3, 0F, 0F, 0F);
    Piece3.mirror = true;
    Piece4 = new ModelRenderer(this, "Piece4");
    Piece4.setRotationPoint(0F, 0F, 0F);
    setRotation(Piece4, 0F, 0F, 0F);
    Piece4.mirror = true;
  }
  
  public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
  {
    super.render(entity, f, f1, f2, f3, f4, f5);
    setRotationAngles(f, f1, f2, f3, f4, f5, entity);
    ArmRight.render(f5);
    ArmLeft.render(f5);
    ClawRight1.render(f5);
    ClawLeft1.render(f5);
    ClawLeft2.render(f5);
    ClawRight2.render(f5);
    ClawBigLeft1.render(f5);
    ClawBigLeft2.render(f5);
    ClawBigRight1.render(f5);
    ClawBigRight2.render(f5);
    ClawBigRight3.render(f5);
    ClawBigRight4.render(f5);
    ClawBigLeft4.render(f5);
    ClawBigLeft3.render(f5);
    ArmRight2.render(f5);
    ArmLeft2.render(f5);
    HeadBig.render(f5);
    HeadSmall.render(f5);
    HeadMedium.render(f5);
    AntennaRight1.render(f5);
    AntennaLeft1.render(f5);
    AntennaRight2.render(f5);
    AntennaLeft2.render(f5);
    EyeLeft.render(f5);
    EyeRight.render(f5);
    Body1.render(f5);
    Body2.render(f5);
    Body3.render(f5);
    Body4.render(f5);
    ExoSlele1.render(f5);
    ExoSlele2.render(f5);
    ExoSlele3.render(f5);
    Tail1.render(f5);
    Tail3.render(f5);
    Tail2.render(f5);
    Leg1a.render(f5);
    Leg1b.render(f5);
    Leg2a.render(f5);
    Leg2b.render(f5);
    Leg3a.render(f5);
    Leg3b.render(f5);
    Leg4a.render(f5);
    Leg4b.render(f5);
    Piece1.render(f5);
    Piece2.render(f5);
    Piece3.render(f5);
    Piece4.render(f5);
  }
  
  private void setRotation(ModelRenderer model, float x, float y, float z)
  {
    model.rotateAngleX = x;
    model.rotateAngleY = y;
    model.rotateAngleZ = z;
  }
  
  public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5, Entity entity)
  {
    super.setRotationAngles(f, f1, f2, f3, f4, f5, entity);
      
      this.Leg1a.rotateAngleX = MathHelper.cos(f * 0.6662F) * 1.4F * f1;
      this.Leg1b.rotateAngleX = MathHelper.cos(f * 0.6662F) * 1.4F * f1;
      this.Leg3a.rotateAngleX = MathHelper.cos(f * 0.6662F) * 1.4F * f1;
      this.Leg3b.rotateAngleX = MathHelper.cos(f * 0.6662F) * 1.4F * f1;
      this.AntennaRight1.rotateAngleX = MathHelper.cos(f * 0.6662F) * 1.0F * f1;
      this.AntennaRight2.rotateAngleX = MathHelper.cos(f * 0.6662F) * 1.0F * f1;
      this.ArmLeft.rotateAngleY = MathHelper.cos(f * 0.6662F) * 1.0F * f1;
      this.ClawLeft1.rotateAngleY = MathHelper.cos(f * 0.6662F) * 0.7F * f1;
      this.ClawLeft2.rotateAngleY = MathHelper.cos(f * 0.6662F) * 0.5F * f1;
      this.ClawBigLeft1.rotateAngleY = MathHelper.cos(f * 0.6662F) * 0.7F * f1;
      this.ClawBigLeft2.rotateAngleY = MathHelper.cos(f * 0.6662F) * 0.7F * f1;
      this.ClawBigLeft3.rotateAngleY = MathHelper.cos(f * 0.6662F) * 0.5F * f1;
      this.ClawBigLeft4.rotateAngleY = MathHelper.cos(f * 0.6662F) * 0.5F * f1;
      this.Leg2a.rotateAngleX = MathHelper.cos(f * 0.6662F + (float)Math.PI) * 1.4F * f1;
      this.Leg2b.rotateAngleX = MathHelper.cos(f * 0.6662F + (float)Math.PI) * 1.4F * f1;
      this.Leg4a.rotateAngleX = MathHelper.cos(f * 0.6662F + (float)Math.PI) * 1.4F * f1;
      this.Leg4b.rotateAngleX = MathHelper.cos(f * 0.6662F + (float)Math.PI) * 1.4F * f1;
      this.AntennaLeft1.rotateAngleX = MathHelper.cos(f * 0.6662F + (float)Math.PI) * 1.0F * f1;
      this.AntennaLeft2.rotateAngleX = MathHelper.cos(f * 0.6662F + (float)Math.PI) * 1.0F * f1;
      this.ArmRight.rotateAngleY = MathHelper.cos(f * 0.6662F + (float)Math.PI) * 1.0F * f1;
      this.ClawRight1.rotateAngleY = MathHelper.cos(f * 0.6662F + (float)Math.PI) * 0.7F * f1;
      this.ClawRight2.rotateAngleY = MathHelper.cos(f * 0.6662F + (float)Math.PI) * 0.5F * f1;
      this.ClawBigRight1.rotateAngleY = MathHelper.cos(f * 0.6662F + (float)Math.PI) * 0.7F * f1;
      this.ClawBigRight2.rotateAngleY = MathHelper.cos(f * 0.6662F + (float)Math.PI) * 0.7F * f1;
      this.ClawBigRight3.rotateAngleY = MathHelper.cos(f * 0.6662F + (float)Math.PI) * 0.5F * f1;
      this.ClawBigRight4.rotateAngleY = MathHelper.cos(f * 0.6662F + (float)Math.PI) * 0.5F * f1;
  }

}
